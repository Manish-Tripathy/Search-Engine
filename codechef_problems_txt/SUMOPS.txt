Sum Operations (Easy)
This is the easy version of the problem. It is worth
25 points in division
1, and
100 points in all other divisions.
For an array
B of length
M, you are allowed to perform the following operation as many times as required:
Let
S=
i=1
∑
M
B
i
Pick
i such that
1≤i≤min(M,∣S∣)
Either increment or decrement
B
i
by
1
Define
f(B) to be the minimum number of operations needed to turn every element of
B to
0, or
−1 if it's impossible to achieve.
You are given an array
A of length
N. Output the value
f(A).
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of multiple lines of input.
The first line of each test case contains a single integer
N — the number of elements of the array
A.
The second line of each test case contains
N space-separated integers — the elements of the array
A.
Output Format
For each test case, output on a new line the value
f(A).
Constraints
1≤T≤10
5
1≤N≤2⋅10
5
−10
9
≤A
i
≤10
9
The sum of
N over all test cases won't exceed
2⋅10
5
.
Sample 1:
Input
Output
5
4
1 0 -1 -1
3
3 0 1
2
0 0
5
-2 0 3 -2 2
4
2 -3 -1 2
7
4
0
13
-1
Explanation:
Test case
2: One sequence of four operations is:
Decrement
A
1
by
1, to get
[2,0,1]. The sum is now
3.
Decrement
A
3
by
1, to get
[2,0,0]. The sum is now
2.
Decrement
A
1
by
1, to get
[1,0,0]. The sum is now
1.
Decrement
A
1
by
1, to get
[0,0,0].
Test case
3: The array is already filled with zeros.
Test case
5: It can be shown that it's impossible to make every element
0.