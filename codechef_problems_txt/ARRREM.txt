Array Removal
You are given an array
A of size
N.
Your task is to determine the minimum number of elements that need to be removed from the array
A such that the bitwise OR of the remaining elements is
2
x
−1 for some integer
x (x≥0).
Note that the bitwise OR of an empty array is considered to be
0.
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
The first line of each test case contains an integer
N - the size of the array
A.
The second line of each test case contains
N space-separated integers
A
1
,A
2
,…,A
N
, denoting the array
A.
Output Format
For each test case, output on a new line, the minimum number of elements that need to be removed from the array.
Constraints
1≤T≤10
5
1≤N≤10
5
0≤A
i
≤10
9
The sum of
N over all test cases won't exceed
3⋅10
5
.
Sample 1:
Input
Output
2
2
6 16
5
1 17 18 5 6
2
2
Explanation:
Test case
1:
If we don't remove any element then bitwise OR will be
22 which is not of the form
2
x
−1.
If we remove
6, then bitwise OR will be
16 which is not of the form
2
x
−1. Similarly, if we remove
16 then bitwise OR will be
6 which is not of the form
2
x
−1.
If we remove both elements then bitwise OR is
0 which is of the form
2
x
−1 for
x=0.
Test case
2: If we remove
A
2
=17 and
A
3
=18, then bitwise OR of remaining elements will be
7 which is of the form
2
x
−1 for
x=3.
It can be shown that we cannot satisfy the condition by removing less than
2 elements.