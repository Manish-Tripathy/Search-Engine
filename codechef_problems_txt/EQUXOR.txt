Equate XOR
Given an array
A of
N integers. Consider an arbitrary non negative integer
X(initially, score is zero).
We will sequentially perform the following operation for indices
1,2,3,....N:
For
i
th
operation,
If
X=A
i
then add
X to
score.
Otherwise, assign
X:=X⊕A
i
.
Where
⊕ is bitwise XOR operation.
Note: when
X matches
A
i
during
i
th
operation, you are not updating
X.
You are tasked to print the maximum achievable
score after doing
N operations by choosing optimal initial value of integer
X.
Input Format
The first line contains single integer
T
− the number of testcases. For each testcase,
the first line contains a single integer
N
− the size of the array
A.
the second line contains
N space-separated integers,
A
1
,A
2
,⋯,A
N
− the elements of array
A.
Output Format
For each testcase, print a single line containing a single integer
− maximum possible
score.
Constraints
1≤T≤2⋅10
5
1≤N≤2⋅10
5
1≤A
i
≤10
9
The sum of
N over all testcases doesn't exceed
2⋅10
5
Sample 1:
Input
Output
3
2
1 2
3
1 1 1
4
2 1 3 3
2
3
8
Explanation:
Testcase 1:
If initial State:
X=0 and score
=0,
At
i=1: Since
X

=1, update
X→X⊕A
1
=0⊕1=1 and score is still zero.
At
i=2: Again
X

=2, update
X→X⊕A
2
=1⊕2=3 and score is still zero.
Final Score:
0
If initial State:
X=3 and score
=0,
At
i=1: Since
X

=1, update
X→X⊕A
1
=3⊕1=2 and score is still zero.
At
i=2: Now,
X=2, so add
X to the score and
X is not updated.
Final Score:
2 (Maximum possible score).
Testcase 2:
If initial State:
X=1 and score
=0,
At
i=1,2,3: Since
X=1 and
X=A
i
throughout, no update in
X is performed, and
1 is added to score every time.
Final Score:
3 (Maximum possible score).