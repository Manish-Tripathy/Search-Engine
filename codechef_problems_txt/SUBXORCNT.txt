Subtree XOR Counting
You are given a tree with
N nodes rooted at node
1. The
i-th node has a label of
A
i
.
A node
v is said to be in the subtree of
u if the simple path from
1 to
v passes through node
u. We define
S
u
as the set of all nodes
v such that
v

=u and
v is in the subtree of
u.
A node
u is said to be good if either of the following conditions hold:
S
u
is empty.
S
u
is non-empty, and let
S
u
={X
1
,X
2
,....,X
K
}, then
A
u
=A
X
1
⊕A
X
2
A
X
K
.
A tree is beautiful iff all nodes are good.
Unfortunately the given tree might not be beautiful already. In one operation, you can choose some node
u and change it's value to any arbitrary non-negative integer. Let
f(A) denote the minimum number of such changes to make the tree beautiful for the given array
A.
You are given the tree of
N nodes but not the array
A. Calculate the sum of
f(A) for all
(M+1)
N
arrays
A satisfying the following constraints:
∣A∣=N
0≤A
i
≤M
Since the answer may be large, output it modulo
998244353.
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of multiple lines of input.
The first line of each test case contains two space-separated integers
N and
M — the number of vertices and the upper bound on values.
The next
N−1 lines describe the edges. The
i-th line contains two space-separated integers
u
i
and
v
i
, denoting an edge between
u
i
and
v
i
.
Output Format
For each test case, output on a new line the sum of
f(A) modulo
998244353.
Constraints
1≤T≤10
4
2≤N≤2⋅10
5
1≤M≤998244351
1≤u
i
,v
i
≤N
The set of input edges define a tree.
The sum of
N over all test cases does not exceed
2⋅10
5
.
Sample 1:
Input
Output
4
2 4
1 2
3 1
1 2
1 3
4 5
1 2
2 3
1 4
7 10000
1 3
1 7
3 2
2 4
1 5
1 6
20
4
2160
848909786
Explanation:
Test Case 1 : It can be shown that the tree with
2 nodes is beautiful if and only if
A
1
=A
2
. Every non-beautiful tree can be made in beautiful in one operation by changing
A
2
to
A
1
.
There are
20 ways to choose
A
1

=A
2
under the constraints, so the answer is
20.
Test Case 2 : There are
8 arrays, of which the arrays
[1,1,1],
[0,1,0],
[0,0,1] and
[1,0,0] require
1 change, while the others need
0 changes. Thus, the answer is
4.