Special Operation
You are given a matrix
A consisting of
N rows and
M columns.
You task is to select an element
A
(x,y)
(1≤x≤N,1≤y≤M) such that the following value is maximised:
∑
i=1,i

=x
i=N
∑
j=1,j

=y
j=M
(A
(i,j)
⊕A
(x,y)
). Here,
⊕ denotes bitwise XOR operation.
In other words, you need to select an element
A
(x,y)
such that the sum of bitwise XOR of
A
(x,y)
with all elements that are not in the
x
th
row or the
y
th
column is maximum.
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of multiple lines of input.
The first line of each test case contains two space-separated integers
N and
M — the number of rows and columns.
The next
N lines contains
M space-separated integers each, describing the entire matrix.
Output Format
For each test case, output on a new line, the maximum sum possible.
Constraints
1≤T≤2⋅10
5
1≤N≤10
5
1≤M≤10
5
0≤A
(i,j)
<2
30
The sum of
N×M over all test cases won't exceed
10
6
.
Sample 1:
Input
Output
1
2 3
1 2 3
4 5 6
13
Explanation:
Test case
1: Consider the element
A
(2,1)
=4. The sum obtained on selecting this element would be
4⊕2+4⊕3=6+7=13. Note that the elements of second row and first column are omitted while calculating the sum.
It can proven that no other element would lead to a sum more than
13.