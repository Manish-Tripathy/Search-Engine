OR What
You are given two positive integers
N and
X.
Find any permutation
P of the integers
1 to
N such that the number of indices
i (
1≤i≤N) satisfying
P
P
i
∣i=X
is as large as possible.
Here,
∣ denotes the bitwise OR operation.
A permutation of the integers
1 to
N is an array of length
N that contains every integer from
1 to
N exactly once.
If there are multiple permutations that maximize the required count of indices, you may find any of them.
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
The first and only line of each test case contains two space-separated integers
N and
X – the length of the permutation, and the target bitwise OR.
Output Format
For each test case, output on a new line
N space-separated integers, denoting the permutation you found.
If there are multiple valid answers, all of them will be accepted.
Constraints
1≤T≤10
5
1≤N≤2⋅10
5
1≤X<2N
The sum of
N over all test cases won't exceed
2⋅10
5
.
Sample 1:
Input
Output
4
5 1
3 4
4 6
6 5
1 3 2 5 4
3 1 2
3 4 1 2
5 6 3 1 4 2
Explanation:
Test case
1: We have
N=5 and
X=1. With
P=[1,3,2,5,4], we have
P
1
∣1=1∣1=1, so there's one valid index.
It can be shown that it's not possible to obtain more than one valid index.
Test case
2: No matter what permutation is taken, there will be no indices satisfying
P
i
∣i=4, so any permutation of
[1,2,3] is a valid answer here.
Test case
3: With
P=[3,4,1,2], there are two indices (
i=2 and
i=4) for which
P
i
∣i=X. This is optimal.