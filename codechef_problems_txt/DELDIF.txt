Deletion and Difference
You're given an array
A of length
N. You can perform the following operation on it:
Choose two indices
i and
j (
1≤i<j≤∣A∣) such that
A
i
=A
j
.
Delete both
A
i
and
A
j
from
A, and append
∣A
i
−A
j
∣ to
A.
The length of the array reduces by
1, and all remaining elements are re-indexed to start from
1.
Find the minimum possible length of
A after performing this operation several (possibly, zero) times.
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of two lines of input.
The first line of each test case contains a single integer
N, denoting the length of
A.
The second line contains
N space-separated integers
A
1
,A
2
,…,A
N
— the elements of
A.
Output Format
For each test case, output on a new line a single integer: the minimum possible length of
A after performing the given operation several times.
Constraints
1≤T≤10
5
1≤N≤2⋅10
5
0≤A
i
≤N
The sum of
N over all test cases won't exceed
2⋅10
5
.
Sample 1:
Input
Output
3
4
3 1 4 2
2
1 1
3
1 1 0
4
1
1
Explanation:
Test Case 1 : There are no deletions we can do. Hence, the answer is
4, the size of the initial array.
Test Case 2 : We can choose
i=1,j=2. Note that
A
1
=A
2
=1, and then insert their difference
0 back into the array while deleting the
1s. Thus, the final array becomes
[0] of size
1.