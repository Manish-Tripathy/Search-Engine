Permutation Construct
A permutation of length
N is an array of length
N that contains every integer from
1 to
N exactly once.
Given
N and
K, find a permutation
P of length
N satisfying the following constraints:
P
i

=i for all
1≤i≤N
P
i
modK=imodK for all
1≤i≤N
In case no such permutation exists, output
−1 instead.
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
The first and only line of each test case contains
2 integers -
N and
K.
Output Format
For each test case, output the following:
If a valid permutation exists, output
N space-separated integers -
P
1
,P
2
,…,P
N
, representing the permutation you found.
Otherwise, output
−1.
If there are multiple valid permutations, you may print any of them.
Constraints
1≤T≤100
1≤K≤N≤100
Sample 1:
Input
Output
4
4 2
3 1
4 3
1 1
3 4 1 2
2 3 1
-1
-1
Explanation:
Test case
1: All the constraints are satisfied with
P=[3,4,1,2]. For example, we can check
P
1

=1 but
P
1
mod2=1mod2=1.
Test case
2: Since
K=1,
P
i
modK=imodK holds by default. We only need
P
i

=i, so any permutation satisfying that works. Another possible answer is
P=[3,1,2].
Test case
3: No valid permutation exists.