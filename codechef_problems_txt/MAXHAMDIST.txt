Maximize Hamming Distance
You are given
M strings, each of length
N. The
i-th string is called
S
i
.
The strings contain only the characters
0,
1, or
?.
You must replace every
? with either a
0 or a
1, hence obtaining
M binary strings.
If you perform these replacements optimally, find the maximum possible sum of Hamming distances between each pair of strings.
Formally, your aim is to maximize
i=1
∑
M
j=i+1
∑
M
f(S
i
,S
j
)
where
f(S
i
,S
j
) denotes the Hamming distance between strings
S
i
and
S
j
.
The Hamming distance between two strings of equal length is the number of positions at which the corresponding characters are different.
For example, the Hamming distance between
1001 and
0011 is
2, since they differ at the first and third characters.
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of multiple lines of input.
The first line of each test case contains two space-separated integers
N and
M — the length of the strings and the number of strings, respectively.
The next
M lines contains the strings each of length
N.
Output Format
For each test case, output on a new line the maximum sum of Hamming distances between each pair of strings that can be obtained.
Constraints
1≤T≤10
5
1≤N≤1.5⋅10
5
2≤M≤3⋅10
5
The sum of
N×M over all test cases won't exceed
3⋅10
5
.
The strings contain only
0,
1, or
?.
Sample 1:
Input
Output
4
2 2
?1
0?
3 3
001
???
011
5 3
10001
00000
00000
4 2
001?
00??
2
6
4
2
Explanation:
Test case
1: Consider the following operations:
Replace the
? from the string
?1 with
1 giving us
11.
Replace the
? from the string
0? with
0 giving us
00.
We can now calculate the sum of hamming distances of all pairs as:
Hamming distance between
00 and
11
=
2
The total sum is
2 which is the maximum possible.
Test case
2: Consider the following operations:
Replace the first, second and third
? from the string
??? with
1,
1, and
0 respectively, giving us
110.
We can now calculate the sum of hamming distances of all pairs as:
Hamming distance between
001 and
110
=
3
Hamming distance between
001 and
011
=
1
Hamming distance between
110 and
011
=
2
The total sum is
3+1+2=6 which is the maximum possible.
Test case
3: The strings do not contain any
? so no replacements are required
We can now calculate the sum of hamming distances of all pairs as:
Hamming distance between
10001 and
00000
=
2
Hamming distance between
10001 and
00000
=
2
Hamming distance between
00000 and
00000
=
0
The total sum is
2+2+0=4 which is the maximum possible.
Test case
4: We can replace the
? to make the first string
0010 and the second string
0001.
The Hamming distance between
0010 and
0001 is
2.