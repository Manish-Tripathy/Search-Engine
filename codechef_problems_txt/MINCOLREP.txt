Minimum Colours (Hard)
This is the hard version of the problem. The difference is that you do not remember all array elements correctly, and there are
A
i
=0. It is worth 60 points in Division 2, 3 and 4, and 100 points in Division 1.
You have an array
A of
N integers -
A
1
,A
2
,...,A
N
.
You can perform the following operation as many times as you want:
Choose
L,R such that
1≤L<R≤N and
A
L
=A
R
, then update
A
i
:=A
L
for all
L≤i≤R.
Let
() denote the minimum number of distinct elements in the array
after applying operations optimally.
In this version, you have unfortunately forgotten some of the original elements of
A. The original elements all satisfied
1≤A
i
≤N, and if you have forgotten the original value, you are given
A
i
=0 instead.
Find the minimum value of
f(A) over all possible original arrays, i.e. minimum
f(A) by optimally replacing the
0s in
A with elements in
[1,N].
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of two lines of input.
The first line of each test case contains
N - the size of the array.
The second line contains
N integers -
A
1
,A
2
,…,A
N
.
Output Format
For each test case, output on a new line the minimum possible value of
f(A), after optimal replacement.
Constraints
1≤T≤10
4
3≤N≤2⋅10
5
0≤A
i
≤N
The sum of
N does not exceed
2⋅10
5
over all test cases.
Sample 1:
Input
Output
7
3
1 2 1
4
1 0 3 2
6
1 2 1 2 3 2
4
1 0 0 2
3
1 2 3
3
0 0 0
9
1 5 0 3 0 3 4 2 2
1
2
2
2
3
1
3
Explanation:
Test case
1: There are no
0s in the array to replace. We can choose
L=1,R=3 and operate to get
[1,1,1] which has only
1 distinct element.
Test case
2: Replace
A
2
with
2 to get
[1,2,3,2]. Then take
L=2,R=4 and operate to get the array
[1,2,2,2] which has only
2 distinct elements.