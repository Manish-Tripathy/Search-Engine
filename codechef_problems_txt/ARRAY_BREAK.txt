Break This Array
You are given an array
A of size
N, and a string
S of length
K consisting of characters
L and
R only.
You have to perform
K operations on the array. In the
i
th
operation:
If the array is of size
1, you do not need to perform the operation.
Else, choose an integer
X
(1≤X<∣A∣) randomly and equi-probably and break the array
A into subarrays
A[1,X] and
A[X+1,∣A∣], where
∣A∣ denotes the length of the array.
If
S
i
=L, set
A:=A[1,X]
If
S
i
=R, set
A:=A[X+1,∣A∣]
Find the expected sum of all elements in the final array
A after
K operations.
The value can be represented as an irreducible fraction
Q
P
, where
P and
Q are coprime integers. You need to output
P⋅Q
−1
modulo
(10
9
+7), where
Q
−1
represents the multiplicative inverse of
Q modulo
(10
9
+7).
Note that
A[L,R] denotes the subarray
[A
L
,A
L+1
,…,A
R
].
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of multiple lines of input.
The first line of each test case contains two space-separated integers
N and
K — the size of the array and the number of operations respectively.
The second line of each test case contains
N space-separated integers denoting the elements of the array.
The third line of each test case contains a string of length
K consisting only of characters
L and
R.
Output Format
For each test case, output on a new line, the expected sum of all elements in the final array
A after
K operations.
The value can be represented as an irreducible fraction
Q
P
, where
P and
Q are coprime integers. You need to output
P⋅Q
−1
modulo
(10
9
+7), where
Q
−1
represents the multiplicative inverse of
Q modulo
(10
9
+7).
Constraints
1≤T≤500
1≤N,K≤500
1≤A
i
≤10
9
The sum of
N over all test cases won't exceed
500.
The sum of
K over all test cases won't exceed
500.
Subtasks
Subtask 1 (30 points): The sum of
N and the sum of
K across all test cases won't exceed
100.
Subtask 2 (70 points): No further constraints.
Sample 1:
Input
Output
2
5 1
1 2 3 4 5
L
5 2
1 2 3 4 5
LR
5
416666673
Explanation:
Test case
1: There are
4 equiprobable resultant arrays:
[1],[1,2],[1,2,3],[1,2,3,4], so the expected sum is
4
1+3+6+10
=
4
20
=5