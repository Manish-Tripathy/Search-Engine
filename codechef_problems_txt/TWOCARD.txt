Two Cards
Alice and Bob have
N cards with them. The
i-th card has the number
A
i
written on its front, and
B
i
written on its back.
It's guaranteed that
A
i

=A
j
for
i

=j, i.e, all the
A
i
values are distinct.
All the cards are face-up, so only their
A
i
values are visible.
Alice will choose exactly one card from the
N cards, and remove it.
After Alice has chosen her card, Bob will choose a card from the remaining
N−1 cards.
Bob is greedy, and wants his card to have a large number on it. However, since he can only see the
A
i
values, he will always choose whichever card has the maximum
A
i
value among the remaining cards.
If Alice chooses card
x, and Bob chooses card
y, Alice will win if and only if
max(A
x
,B
x
)>max(A
y
,B
y
)
Is there a way for Alice to choose a card such that she wins?
Input Format
The first line of input will contain a single integer
T, denoting the number of test cases.
Each test case consists of three lines of input.
The first line of each test case contains a single integer
N — the number of cards.
The second line contains
N space-separated integers
A
1
,A
2
,…,A
N
— the numbers written on the fronts of the cards.
The third line contains
N space-separated integers
B
1
,B
2
,…,B
N
— the numbers written on the backs of the cards.
Output Format
For each test case, output on a new line the answer: "Yes" if Alice can win, and "No" otherwise (without quotes).
Each character of the output may be printed in either uppercase or lowercase, i.e, the strings No, NO, no, and nO will all be treated as equivalent.
Constraints
1≤T≤10
5
2≤N≤2⋅10
5
1≤A
i
,B
i
≤2⋅N
A
i

=A
j
for
i

=j
The sum of
N over all test cases won't exceed
2⋅10
5
.
Sample 1:
Input
Output
4
2
1 3
3 4
2
1 3
3 1
3
3 4 5
6 6 6
4
4 3 1 5
6 5 7 2
Yes
No
No
Yes
Explanation:
Test case
1: Alice can choose the second card, forcing Bob to choose the first.
max(A
2
,B
2
)=4>3=max(A
1
,B
1
), so Alice wins.
Test case
2: No matter which card Alice chooses,
max(A
i
,B
i
)=3.
Alice needs the value to be strictly greater to win; since they're equal here, she can't win.
Test case
4: Alice can choose the first card, and Bob will choose the last (since
5 is the largest remaining
A
i
value).
max(A
1
,B
1
)=6>5=max(A
4
,B
4
), so Alice wins.
Note that Alice wouldn't have won if Bob chose the third card, since
max(A
3
,B
3
)=7>6.
However,
A
3
=1 isn't the largest remaining
A
i
value after Alice's choice, so Bob won't choose this card.